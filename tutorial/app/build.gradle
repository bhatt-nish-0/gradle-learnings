
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // this is the source of dependencies.
    // gradle needs some information to find the dependency.
    // since the below refers to the libs.version.toml
    // lets look at libs.version.toml
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}
// the above is how the catalog is referenced

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task helloNish {
    doLast {
        println 'custom task on the way kailash!'
    }
}
/*
below is explicit task dependency
 */

task helloNish2 {
    dependsOn("helloNish")
}
build.dependsOn helloNish